ext {
    // Android
    androidBuildToolsVersion    = "29.0.2"
    androidMinSdkVersion        = 14
    androidTargetSdkVersion     = 29
    androidCompileSdkVersion    = 29
    androidApplicationId        = 'com.health.covid19app'
    androidVersionCode          = 1
    androidVersionName          = "1.0"

    // Libraries
    androidXVersion         = '1.0.2'
    kotlinVersion           = '1.3.50'
    rxJavaVersion           = '2.2.12'
    rxAndroidVersion        = '2.1.1'
    retrofitVersion         = '2.6.1'
    okhttpVersion           = '3.4.1'
    daggerVersion           = '2.24'
    glideVersion            = '4.11.0'
    gsonVersion             = '2.8.0'
    androidMaterialVersion  = '1.1.0-alpha06'

    // Testing
    junitVersion        = '4.12'

    // Packages
    kotlinPackage           = 'org.jetbrains.kotlin'
    appCompatPackage        = 'androidx.appcompat'
    coreKTXPPackage         = 'androidx.core'
    androidMaterialPackage  = 'com.google.android.material'
    gsonPackage             = 'com.google.code.gson'
    glidePackage            = 'com.github.bumptech.glide'
    reactivePackage         = 'io.reactivex.rxjava2'
    daggerPackage           = 'com.google.dagger'
    retrofitPackage         = 'com.squareup.retrofit2'
    okhttpPackage           = 'com.squareup.okhttp3'
    junitPackage            = 'junit'

    androidXdependencies = [
            kotlin      : buildDependency(kotlinPackage, 'kotlin-stdlib-jdk7', kotlinVersion),
            corektx     : buildDependency(coreKTXPPackage, 'core-ktx', androidXVersion),
            appCompat   : buildDependency(appCompatPackage , 'appcompat', androidXVersion)
    ]

    rxDependencies = [
            rxJava      : buildDependency(reactivePackage, 'rxjava', rxJavaVersion),
            rxAndroid   : buildDependency(reactivePackage, 'rxandroid', rxAndroidVersion)
    ]

    daggerDependencies  = [
            dagger          : buildDependency(daggerPackage, 'dagger-android', daggerVersion),
            daggerCompiler  : buildDependency(daggerPackage, 'dagger-compiler', daggerVersion),
            daggerSupport   : buildDependency(daggerPackage, 'dagger-android-support', daggerVersion),
            daggerProcessor : buildDependency(daggerPackage, 'dagger-android-processor', daggerVersion)
    ]

    retrofitDependencies = [
            retrofit: buildDependency(retrofitPackage, 'retrofit', retrofitVersion),
            retrofitCoverter:buildDependency(retrofitPackage, 'converter-gson', retrofitVersion),
            retrofitAdapter: buildDependency(retrofitPackage, 'adapter-rxjava2', retrofitVersion)
    ]

    okhttpDependencies = [
            loggingInterceptor: buildDependency(okhttpPackage, 'logging-interceptor', okhttpVersion)
    ]

    glideDependencies = [
            glide: buildDependency(glidePackage, 'glide', glideVersion),
            compiler:buildDependency(glidePackage, 'compiler', glideVersion)
    ]

    material    = buildDependency(androidMaterialPackage, 'material', androidMaterialVersion)
    gson        = buildDependency(gsonPackage, 'gson', gsonVersion)

    testingDependencies = [
            junit      : buildDependency(junitPackage, 'junit', junitVersion)
    ]
}

static String buildDependency(String pack, String dependency, String version) {
    return "${pack}:${dependency}:${version}"
}
